#!/bin/sh
#
# gitzone-shell - restrictive shell for gitzone
#
# Copyright (C) 2011,2019 Dyne.org Foundation
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.


# only repo allowed for git pull/push
repo=$LOGNAME
# directory the repo is in, relative to $HOME
repo_dir='zones'
#repo_dir='.'

# allow ssh key add/del/list commands if this file exists
allow_key_mgmt_file='.ssh/authorized_keys_edit_allowed'

# paths
config=/etc/gitzone.conf
gitzone=/usr/bin/gitzone
git=/usr/bin/git
grep=/bin/grep

error() {
	echo "fatal: What do you think I am? A shell?"
	exit 127
}

if [ "$1" != "-c" ]; then error; fi
cmd=$2

case "$cmd" in
git-upload-pack*)
	$git upload-pack "$repo_dir/$repo"
	exit $?
	;;
git-receive-pack*)
	$git receive-pack "$repo_dir/$repo"
	exit $?
	;;
update-record*)
	cd "$repo_dir/$repo/.git" || exit 1
	$gitzone "$config" update-record "$cmd"
	exit $?
	;;
esac

if [ -f "$allow_key_mgmt_file" ]; then
	case "$cmd" in
	list-keys)
		cat .ssh/authorized_keys
		exit $?
		;;
	add-key*)
		key="$(echo "$cmd" | cut -c9-)"
		echo "$key" >> .ssh/authorized_keys && echo "key added"
		exit $?
		;;
	del-key*)
		key="$(echo "$cmd" | cut -c9-)"
		$grep -v "$key" .ssh/authorized_keys > .ssh/authorized_keys-new || exit 1
		mv .ssh/authorized_keys-new .ssh/authorized_keys && echo "key deleted"
		exit $?
		;;
	esac
fi

error
